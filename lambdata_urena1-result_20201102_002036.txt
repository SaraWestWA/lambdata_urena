Check results
=============

E501:10:80:line too long (93 > 79 characters)
E501:11:80:line too long (85 > 79 characters)
E111:16:11:indentation is not a multiple of four
E111:19:11:indentation is not a multiple of four
E231:23:24:missing whitespace after ','
E111:24:3:indentation is not a multiple of four
E111:26:3:indentation is not a multiple of four
E111:27:3:indentation is not a multiple of four
E111:28:3:indentation is not a multiple of four
E111:29:3:indentation is not a multiple of four
E302:31:1:expected 2 blank lines, found 1
E111:32:3:indentation is not a multiple of four
E111:33:3:indentation is not a multiple of four
E231:33:41:missing whitespace after ','
E111:38:3:indentation is not a multiple of four
E301:38:3:expected 1 blank line, found 0
E501:39:80:line too long (139 > 79 characters)
E111:40:3:indentation is not a multiple of four
E301:40:3:expected 1 blank line, found 0
E501:41:80:line too long (139 > 79 characters)
E127:44:30:continuation line over-indented for visual indent
E501:44:80:line too long (96 > 79 characters)
E231:45:52:missing whitespace after ','
E231:45:67:missing whitespace after ','
E231:45:71:missing whitespace after ','
E501:45:80:line too long (139 > 79 characters)
E231:46:66:missing whitespace after ','
E501:46:80:line too long (169 > 79 characters)
E231:46:83:missing whitespace after ','
E231:46:86:missing whitespace after ','
E231:47:35:missing whitespace after ','
E231:47:53:missing whitespace after ','
E231:47:57:missing whitespace after ','
E501:47:80:line too long (108 > 79 characters)
E231:48:56:missing whitespace after ','
E231:48:76:missing whitespace after ','
E231:48:80:missing whitespace after ','
E501:48:80:line too long (154 > 79 characters)
W292:48:155:no newline at end of file

Code
=============
import pandas as pd
import numpy as np
import datetime as dt

ONES = pd.Series(np.ones(10))
ZEROS = pd.Series(np.zeros(20))


def isit_float(s):
    """Function pass a string return true if it is formatted as a float example isit_float('1.1')
    returns False if it is formatted as a interger or str example isit_float('1') """
    try:
        int(s)
        return False
    except ValueError:
          try:
                float(s)
                return True
          except ValueError:
                return False


def datetime_columns(df,feature):
  """pass a pandas dataframe and column name with date str type,
  return columns in same the data frame with day, month and year columns"""
  df['day'] = pd.to_datetime(df[feature]).dt.day
  df['month'] = pd.to_datetime(df[feature]).dt.month
  df['year'] = pd.to_datetime(df[feature]).dt.month
  return df

class Dead_poets_society:
  """class for english poems"""
  def __init__(self, poem, poet, n_words,link):
    self.poem = poem
    self.poet = poet
    self.n_words = n_words
    self.link = link
  def __repr__(self):
    return f"Dead Poets Society(Poem Title={self.poem}, Name Of Poet={self.poet}, Number of Words={self.n_words},Poem's Link ={self.link})"
  def __str__(self):
    return f"Dead Poets Society(Poem Title:{self.poem}, Name Of Poet:{self.poet}, Number of Words:{self.n_words},Poem's Link :{self.link})"

poem3 = Dead_poets_society('She Walks In Beatuty', 'Lord Byron', 119,
                             "https://www.poetryfoundation.org/poems/43844/she-walks-in-beauty")
poem1 = Dead_poets_society("O Captain! My Captain!",'Walt Whitman',199,"https://www.poetryfoundation.org/poems/45474/o-captain-my-captain")
poem2 = Dead_poets_society("To the Virgins, to Make Much of Time","Robert Herrick",96,"https://www.poetryfoundation.org/poems/46546/to-the-virgins-to-make-much-of-time")
poem4 = Dead_poets_society('Ifâ€”','RUDYARD KIPLING',283,'https://www.poetryfoundation.org/poems/46473/if---')
poem5 = Dead_poets_society('The Cremation of Sam McGee','ROBERT W. SERVICE',882,'https://www.poetryfoundation.org/poems/45081/the-cremation-of-sam-mcgee')